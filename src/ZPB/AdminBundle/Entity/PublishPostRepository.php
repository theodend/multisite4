<?php

namespace ZPB\AdminBundle\Entity;

use Doctrine\ORM\Query;


/**
 * PublishPostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PublishPostRepository extends PostableRepository
{
    public function getPosts()
    {
        $qb = $this->_em->createQueryBuilder()
            ->addSelect("pub")
            ->addSelect("post")
            ->addSelect("category")
            ->from("ZPBAdminBundle:PublishPost ", "pub")
            ->leftJoin("pub.post", "post")
            ->leftJoin("pub.category", "category");

        return $qb->getQuery()->getArrayResult();
    }

    public function getOrderedPosts()
    {
        $qb = $this->_em->createQueryBuilder()
            ->addSelect("pub")
            ->addSelect("post")
            ->addSelect("category")
            ->from("ZPBAdminBundle:PublishPost ", "pub")
            ->leftJoin("pub.post", "post")
            ->leftJoin("pub.category", "category")
            ->orderBy("pub.updatedAt", "ASC");

        return $qb->getQuery()->getArrayResult();
    }

    public function getPostsBySite($siteShortname)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select("pub", "post", "category")
            ->from("ZPBAdminBundle:PublishPost", "pub");
        $qb->leftJoin("pub.post", "post")
            ->leftJoin("pub.category", "category")
            ->leftJoin("pub.sites", "sites");
        $qb->where("sites.shortname = :name")
            ->setParameter("name", $siteShortname);
        $qb->orderBy("pub.updatedAt", "ASC");

        return $qb->getQuery()->getArrayResult();
    }

    public function getPagination($siteShortname, $pageNum = null, $resultsPerPage = null)
    {
        $numPosts = $this->countPostsBySite($siteShortname);
        $qb = $this->_em->createQueryBuilder();
        $qb->select("pub", "post", "category")
            ->from("ZPBAdminBundle:PublishPost", "pub");
        $qb->leftJoin("pub.post", "post")
            ->leftJoin("pub.category", "category")
            ->leftJoin("pub.sites", "sites");
        $qb->where("sites.shortname = :name")
            ->setParameter("name", $siteShortname);
        $qb->orderBy("pub.updatedAt", "ASC");
        if($resultsPerPage != null && $resultsPerPage > 0 && $pageNum != null && $pageNum > 0){
            $numTotalPage = ceil($numPosts / $resultsPerPage);
            if ($pageNum > $numTotalPage) {
                $pageNum = $numTotalPage;
            }
            $offset = ($pageNum - 1) * $resultsPerPage;
            $qb->setMaxResults($resultsPerPage)->setFirstResult($offset);
            return [
                "numPost"   => $numPosts,
                "totalPage" => $numTotalPage,
                "pageNum"   => $pageNum,
                "posts"     => $qb->getQuery()->getArrayResult()
            ];

        }
        return [
            "numPost"   => $numPosts,
            "totalPage" => null,
            "pageNum"   => null,
            "posts"     => $qb->getQuery()->getArrayResult()
        ];
    }

    public function countPostsBySite($siteShortname)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select("COUNT(pub) AS num")->from("ZPBAdminBundle:PublishPost", "pub");
        $qb->leftJoin("pub.sites", "sites");
        $qb->where("sites.shortname = :name")
            ->setParameter("name", $siteShortname);

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function getPost($id)
    {
        $qb = $this->_em->createQueryBuilder()
            ->addSelect("pub")
            ->addSelect("post")
            ->addSelect("category")
            ->from("ZPBAdminBundle:PublishPost ", "pub")
            ->leftJoin("pub.post", "post")
            ->leftJoin("pub.category", "category");
        $qb->where($qb->expr()->eq("s.id", $id));

        return $qb->getQuery()->getOneOrNullResult(Query::HYDRATE_ARRAY);
    }

    public function getPostBySlug($slug)
    {
        $qb = $this->_em->createQueryBuilder()
            ->addSelect("pub")
            ->addSelect("post")
            ->addSelect("category")
            ->from("ZPBAdminBundle:PublishPost ", "pub")
            ->leftJoin("pub.post", "post")
            ->leftJoin("pub.category", "category");
        $qb->where("post.slug = :slug");
        $qb->setParameter("slug", $slug);

        return $qb->getQuery()->getOneOrNullResult(Query::HYDRATE_ARRAY);
    }

    public function getPostsByCategory($slug)
    {
        $qb = $this->_em->createQueryBuilder()
            ->addSelect("pub")
            ->addSelect("post")
            ->addSelect("category")
            ->from("ZPBAdminBundle:PublishPost ", "pub")
            ->leftJoin("pub.post", "post")
            ->leftJoin("pub.category", "category");
        $qb->where("category.slug = :slug");
        $qb->setParameter("slug", $slug);

        return $qb->getQuery()->getOneOrNullResult(Query::HYDRATE_ARRAY);
    }
}
